@model IListStructure<ProductCategory>

@{
    ViewData["Title"] = "Categories";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="text-primary">Categories List</h1>
        <a href="@Url.Action("create", "categories", new { area = "Admin" })" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Add New Category
        </a>
    </div>

    <table class="table table-striped table-hover table-bordered shadow-sm">
        <thead class="table">
        <tr>
            <th class="text-center">Name</th>
            <th class="text-center">Description</th>
            <th class="text-center">Actions</th>
        </tr>
        </thead>
        <tbody>
        @if (Model.Items.Any())
        {
            @foreach (var product in Model.Items)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td class="text-center">
                        <a href="@Url.Action("edit", "categories", new { id = product.Id })" class="btn btn-sm btn-warning me-2">
                            <i class="bi bi-pencil-square"></i> Edit
                        </a>
                        <a href="@Url.Action("delete", "categories", new { id = product.Id })" class="btn btn-sm btn-danger">
                            <i class="bi bi-trash"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4" class="text-center text-muted">No categories available.</td>
            </tr>
        }
        </tbody>
    </table>

    @await Html.PartialAsync("_Pagination", Model.Pagination)
</div>
